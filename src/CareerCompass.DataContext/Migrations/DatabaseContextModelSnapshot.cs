// <auto-generated />
using System;
using System.Collections.Generic;
using CareerCompass.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareerCompass.DataContext.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CareerCompass.DataContext.Entities.SchoolYear", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ComplexProperty<Dictionary<string, object>>("Grades", "CareerCompass.DataContext.Entities.SchoolYear.Grades#Grades", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<short?>("Algebra")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Art")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Biology")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Business")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Chemistry")
                                .HasColumnType("smallint");

                            b1.Property<short?>("English")
                                .HasColumnType("smallint");

                            b1.Property<short?>("French")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Geography")
                                .HasColumnType("smallint");

                            b1.Property<short?>("German")
                                .HasColumnType("smallint");

                            b1.Property<short?>("History")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Informatics")
                                .HasColumnType("smallint");

                            b1.Property<short?>("LinearAlgebra")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Mathematics")
                                .HasColumnType("smallint");

                            b1.Property<short?>("MusicEducation")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Physics")
                                .HasColumnType("smallint");

                            b1.Property<short?>("ProgrammingLanguages")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Psychology")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Sociology")
                                .HasColumnType("smallint");

                            b1.Property<short?>("Sport")
                                .HasColumnType("smallint");
                        });

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SchoolYears");
                });

            modelBuilder.Entity("CareerCompass.DataContext.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Goal")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CareerCompass.DataContext.Entities.SchoolYear", b =>
                {
                    b.HasOne("CareerCompass.DataContext.Entities.User", "User")
                        .WithMany("SchoolYears")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerCompass.DataContext.Entities.User", b =>
                {
                    b.Navigation("SchoolYears");
                });
#pragma warning restore 612, 618
        }
    }
}
